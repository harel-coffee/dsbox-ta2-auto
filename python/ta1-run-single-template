#!/usr/bin/env python

import argparse
import os
import time

from dsbox.controller.controller import Controller
from dsbox.controller.config import DsboxConfig
from dsbox.template.library import TemplateLibrary

start_time = time.clock()
controller = Controller(development_mode=True)


def main(args):

    debug = args.debug
    template_name = args.template

    config = DsboxConfig()
    config.load()
    config.search_method = 'serial'

    print('== config')
    print(config)

    controller = Controller(development_mode=debug, run_single_template_name=template_name)
    controller.initialize(config)

    controller.initialize_from_config_for_evaluation(config)

    print("[INFO] Training...")
    status = controller.train(one_pipeline_only=True)

    controller.write_training_results()

    print("[INFO] Generating prediction...")

    status = controller.test()
    time_used = time.clock() - start_time
    print("[INFO] The time used for running program is", time_used, "seconds.")
    return status.value


if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        description='Run DSBox TA2 system using a single template'
    )

    parser.add_argument('--template', action='store', default='',
                        help='Specify a template name')
    parser.add_argument('--list', action='store_true', default=False,
                        help='Display list of template names')
    parser.add_argument('--debug', action='store_true', default=False,
                        help='Debug mode. No timeout and no output redirection')

    args = parser.parse_args()

    if args.list:
        library = TemplateLibrary()
        for name in library.all_templates.keys():
            print(name)
        os._exit(os.EX_OK)

    result = main(args)
    os._exit(result)
